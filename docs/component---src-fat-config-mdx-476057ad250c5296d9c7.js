(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{YZNj:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return l}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("mXGw");var r=t("/FXl"),o=t("TjRS");t("aD51");function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/fat-config.mdx"}});var c={_frontmatter:i},s=o.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(r.b)(s,a({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"fat-config"},"Fat Config"),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"using Yontech.Fat;\nusing Yontech.Fat.ConsoleRunner;\n\n/// ...\n\nstatic int Main(string[] args)\n{\n    var config = new FatConfig()\n    {\n        Browser = BrowserType.Chrome;\n        RunInBackground = true;\n        LogLevel = LogLevel.Debug;\n        InitialSize = new Size(900, 900);\n        // ... other configuration\n    };\n    \n    FatConsoleRunner runner = new FatConsoleRunner(config);\n    runner.Run();\n}\n")),Object(r.b)("h2",{id:"automatic-pick-up"},"Automatic pick up"),Object(r.b)("p",null,"In case the tests are being executed with ",Object(r.b)("inlineCode",{parentName:"p"},"dotnet test")," you have to create a class which inherits from FatConfig.\nIt will be picked up automatically by the Fat framework."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"using Yontech.Fat.Filters;\n\n/// ...\n\npublic class MyConfig : FatConfig\n{\n    public MyConfig()\n    {\n        Browser = BrowserType.Chrome;\n        RunInBackground = true;\n        LogLevel = LogLevel.Debug;\n        InitialSize = new Size(900, 900);\n        // ... other configuration\n    }\n}\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"In case there are multiple Config classes the one with the shortest name will be picked up\nand a warning will be logged.")),Object(r.b)("h2",{id:"browser-configurations"},"Browser configurations"),Object(r.b)("p",null,"Specify the browser that will be used and the folder where driver is located"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),'config.Browser = BrowserType.Chrome;\nconfig.DriversFolder = "drivers";\n')),Object(r.b)("p",null,"Enable Automatic Driver download and in case that is Chrome specify the version that you want"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"config.AutomaticDriverDownload = true;\nChromeVersion AutomaticDriverDownloadChromeVersion = ChromeVersion.Latest;\n")),Object(r.b)("h2",{id:"remote-debugging-with-chrome"},"Remote debugging with Chrome"),Object(r.b)("p",null,"Chrome supports remote debugging which means that Fat Framework will connect to an existing\nrunning instance of Chrome. First open Chrome with remote-debugging"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-shell"}),'# on MacOs\n/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --remote-debugging-port=9222 --user-data-dir="~/FatProfile"\n\n# on Windows\nChrome.exe --remote-debugging-port=9222 --user-data-dir="FatProfile"\n')),Object(r.b)("p",null,"Then configure RemoteDebuggerAddress"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),'config.RemoteDebuggerAddress = "localhost:9222"\n')),Object(r.b)("h2",{id:"browser-start-options"},"Browser start options"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"config.RunInBackground = true;\nconfig.StartMaximized = false;\nconfig.InitialSize = new Size(1200, 800);\n")),Object(r.b)("h2",{id:"browser-behaviour"},"Browser behaviour"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"config.Timeouts.DefaultTimeout = 4000;\nconfig.Timeouts.FinderTimeout = 2000;\n\nconfig.DisablePopupBlocking = true;\n")),Object(r.b)("h2",{id:"logging"},"Logging"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),'config.LogLevel = LogLevel.Warning;\nconfig.LogLevelConfig.Add("YonTech.Fat.Runner.FatRunner", LogLevel.Info);\nconfig.LogLevelConfig.Add("MyClass", LogLevel.Debug);\n')),Object(r.b)("h2",{id:"run-test-settings"},"Run test settings"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"config.DelayBetweenSteps = 1000;\nconfig.DelayBetweenTestCases = 2000;\n")),Object(r.b)("h2",{id:"extra-properties-not-documented-yet"},"Extra properties not documented yet"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-typescript"}),"List<FatBusyCondition> BusyConditions { get; set; } = new List<FatBusyCondition>();\n\nITestCaseFilter Filter { get; set; }\nList<FatInterceptor> Interceptors { get; set; } = new List<FatInterceptor>();\n\n")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/fat-config.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-fat-config-mdx-476057ad250c5296d9c7.js.map