{"version":3,"sources":["webpack:///../src/run-options.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,qMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,0GACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,6cAwBL,8BACE,iBAAGA,WAAW,cAAd,uCAEF,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,WADR,WAGA,sBACE,kBAAIA,WAAW,MAAf,SAA8B,0BAAYA,WAAW,MAAvB,gBAC9B,kBAAIA,WAAW,MAAf,YAAiC,0BAAYA,WAAW,MAAvB,wBAEnC,gGACQ,kBAAIA,WAAW,KAAf,UADR,KACgD,kBAAIA,WAAW,KAAf,oBADhD,KACkG,kBAAIA,WAAW,KAAf,WADlG,OAC6I,kBAAIA,WAAW,KAAf,SAD7I,KAEA,8BACE,iBAAGA,WAAW,cAAd,mJAEF,iBAAQ,CACN,GAAM,mBADR,mBAGA,sBACE,kBAAIA,WAAW,MAAf,SAA8B,0BAAYA,WAAW,MAAvB,SAC9B,kBAAIA,WAAW,MAAf,YAAiC,0BAAYA,WAAW,MAAvB,WAEnC,kCAAiB,0BAAYA,WAAW,KAAvB,QAAjB,kKACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,SAA8B,0BAAYA,WAAW,MAAvB,mBAC9B,kBAAIA,WAAW,MAAf,+CAEF,6FACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,sBACE,kBAAIA,WAAW,MAAf,SAA8B,0BAAYA,WAAW,MAAvB,QAC9B,kBAAIA,WAAW,MAAf,YAAiC,0BAAYA,WAAW,MAAvB,OAEnC,sGACA,8BACE,iBAAGA,WAAW,cAAd,+HAEF,iBAAQ,CACN,GAAM,yBADR,yBAGA,sBACE,kBAAIA,WAAW,MAAf,SAA8B,0BAAYA,WAAW,MAAvB,QAC9B,kBAAIA,WAAW,MAAf,YAAiC,0BAAYA,WAAW,MAAvB,OAEnC,yG,mMAKJJ,EAAWK,gBAAiB","file":"component---src-run-options-mdx-002313c7bd4db3ec3165.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/razvan/my-work/YonTech.Fat.Samples/angular.realworld.io/angular.realworld.io/fat/docs-src/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"run-configuration\"\n    }}>{`Run configuration`}</h1>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Here is an example with all the configurations that can be provided to FatRunner.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`using Yontech.Fat;\nusing Yontech.Fat.Runner;\n\n// ...\n\nstatic void Main(string[] args)\n{\n    var options = new FatRunOptions()\n    {\n        Browser = BrowserType.Chrome,\n        Assemblies = new List<Assembly>(){\n            typeof(Program).Assembly\n        },\n        DelayBetweenSteps = 0, \n        DelayBetweenTestCases = 0,\n        RunInBackground = false\n    };\n\n    FatRunner runner = new FatRunner();\n    runner.Run(options);\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note that all configs are optional`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"basic-config\"\n    }}>{`Basic config`}</h2>\n    <h3 {...{\n      \"id\": \"browser\"\n    }}>{`Browser`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Type: `}<inlineCode parentName=\"li\">{`BrowserType`}</inlineCode></li>\n      <li parentName=\"ul\">{`Default: `}<inlineCode parentName=\"li\">{`BrowserType.Chrome`}</inlineCode></li>\n    </ul>\n    <p>{`It indicates the Browser that will be used to run TestCases.\nIt can be `}<em parentName=\"p\">{`Chrome`}</em>{`, `}<em parentName=\"p\">{`InternetExplorer`}</em>{`, `}<em parentName=\"p\">{`Firefox`}</em>{` or `}<em parentName=\"p\">{`Opera`}</em>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`In future versions FatFramework will support running multiple browsers at the same time. Also it might support specific versions of a Browser.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"runinbackground\"\n    }}>{`RunInBackground`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Type: `}<inlineCode parentName=\"li\">{`bool`}</inlineCode></li>\n      <li parentName=\"ul\">{`Default: `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n    </ul>\n    <p>{`If set to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` the browser will run in background. This is very useful especially in continuous integration environment when tests are being executed automatically.        `}</p>\n    <h2 {...{\n      \"id\": \"advanced-config\"\n    }}>{`Advanced config`}</h2>\n    <h3 {...{\n      \"id\": \"assemblies\"\n    }}>{`Assemblies`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Type: `}<inlineCode parentName=\"li\">{`List<Assembly>`}</inlineCode></li>\n      <li parentName=\"ul\">{`Default: all the assemblies in the project`}</li>\n    </ul>\n    <p>{`A list of assemblies in which FatFramework will seach for TestCases.`}</p>\n    <h3 {...{\n      \"id\": \"delaybetweensteps\"\n    }}>{`DelayBetweenSteps`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Type: `}<inlineCode parentName=\"li\">{`int`}</inlineCode></li>\n      <li parentName=\"ul\">{`Default: `}<inlineCode parentName=\"li\">{`0`}</inlineCode></li>\n    </ul>\n    <p>{`The time (in milliseconds) that the runner will wait between test case steps.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`FatFramework is very fast and you might want to slow down a bit so you have time to check what is happening between steps.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"delaybetweentestcases\"\n    }}>{`DelayBetweenTestCases`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Type: `}<inlineCode parentName=\"li\">{`int`}</inlineCode></li>\n      <li parentName=\"ul\">{`Default: `}<inlineCode parentName=\"li\">{`0`}</inlineCode></li>\n    </ul>\n    <p>{`The time (in milliseconds) that the runner will wait after each test case.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}